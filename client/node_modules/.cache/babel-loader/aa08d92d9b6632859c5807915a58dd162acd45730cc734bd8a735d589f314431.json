{"ast":null,"code":"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nconst usePagination = data => {\n  getData: () => {\n    return console.log('ss');\n  };\n};\n\n// function usePagination(data, pageSize) {\n\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const maxPage = Math.ceil(data.length / pageSize);\n\n//     const currentData = () => {\n//         const begin = (currentPage - 1) * pageSize;\n//         const end = begin + pageSize;\n\n//         return data.slice(begin, end);\n//     }\n\n//     const next = () => {\n//         setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n//     }\n\n//     const prev = () => {\n//         setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\n//     }\n\n//     const jump = (page) => {\n//         const pageNumber = Math.max(1, page);\n//         setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\n//     }\n\n//     return {currentData, next, prev, jump, currentPage, maxPage};\n// }\n\nexport default usePagination;\n\n// ---\n\n// const post = [];\n\n// axios.get('/api/post')\n// .then((response) => {\n//     response.data.map((data, i) => {\n//         post[i] = data;\n//     })\n// })\n\n// const paginationService = {\n//     getData: ({from, to}) => {\n//         return new Promise((res, rej) => {\n//             const data = post.slice(from, to);\n//             res({\n//                 count : post.length,\n//                 data : data\n//             })\n//         })\n//     }\n// }","map":{"version":3,"names":["axios","React","useState","useEffect","usePagination","data","getData","console","log"],"sources":["/Users/myeong/Documents/Develop/WinterDev/blogproject/client/src/services/Pagination.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nconst usePagination = (data) => {\n    getData : () => {\n        return console.log('ss');\n    }\n}\n\n// function usePagination(data, pageSize) {\n\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const maxPage = Math.ceil(data.length / pageSize);\n\n//     const currentData = () => {\n//         const begin = (currentPage - 1) * pageSize;\n//         const end = begin + pageSize;\n\n//         return data.slice(begin, end);\n//     }\n\n\n//     const next = () => {\n//         setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n//     }\n\n//     const prev = () => {\n//         setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\n//     }\n\n//     const jump = (page) => {\n//         const pageNumber = Math.max(1, page);\n//         setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\n//     }\n\n    \n//     return {currentData, next, prev, jump, currentPage, maxPage};\n// }\n\nexport default usePagination;\n\n\n// ---\n\n// const post = [];\n\n// axios.get('/api/post')\n// .then((response) => {\n//     response.data.map((data, i) => {\n//         post[i] = data;\n//     })\n// })\n\n// const paginationService = {\n//     getData: ({from, to}) => {\n//         return new Promise((res, rej) => {\n//             const data = post.slice(from, to);\n//             res({\n//                 count : post.length,\n//                 data : data\n//             })\n//         })\n//     }\n// }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC5BC,OAAO,EAAG,MAAM;IACZ,OAAOC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAC5B,CAAC;AACL,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;;AAEA,eAAeJ,aAAa;;AAG5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}