{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect } from \"react\";\nconst post = [];\naxios.get('/api/post').then(response => {\n  response.data.map((data, i) => {\n    post[i] = data;\n  });\n}, []);\nconst service = {\n  getData: _ref => {\n    let {\n      from,\n      to\n    } = _ref;\n    return new Promise((res, rej) => {\n      const data = post.slice(from, to);\n      console.log(post.length);\n      res({\n        count: post.length,\n        data: data\n      });\n    });\n  }\n};\nexport default service;","map":{"version":3,"names":["axios","useEffect","post","get","then","response","data","map","i","service","getData","from","to","Promise","res","rej","slice","console","log","length","count"],"sources":["/Users/myeong/Documents/Develop/WinterDev/blogproject/client/src/services/index.js"],"sourcesContent":["import axios from \"axios\"\nimport { useEffect } from \"react\"\n\nconst post = [];\n\naxios.get('/api/post')\n.then((response) => {\n    response.data.map((data, i) => {\n        post[i] = data;\n    })\n}, [])\n\nconst service = {\n    getData: ({from, to}) => {\n        return new Promise((res, rej) => {\n\n            const data = post.slice(from, to);\n            console.log(post.length);\n            res({\n                count : post.length,\n                data : data\n            })\n        })\n    }\n}\n\n\n\nexport default service;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AAEjC,MAAMC,IAAI,GAAG,EAAE;AAEfF,KAAK,CAACG,GAAG,CAAC,WAAW,CAAC,CACrBC,IAAI,CAAEC,QAAQ,IAAK;EAChBA,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,CAACD,IAAI,EAAEE,CAAC,KAAK;IAC3BN,IAAI,CAACM,CAAC,CAAC,GAAGF,IAAI;EAClB,CAAC,CAAC;AACN,CAAC,EAAE,EAAE,CAAC;AAEN,MAAMG,OAAO,GAAG;EACZC,OAAO,EAAE,QAAgB;IAAA,IAAf;MAACC,IAAI;MAAEC;IAAE,CAAC;IAChB,OAAO,IAAIC,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAE7B,MAAMT,IAAI,GAAGJ,IAAI,CAACc,KAAK,CAACL,IAAI,EAAEC,EAAE,CAAC;MACjCK,OAAO,CAACC,GAAG,CAAChB,IAAI,CAACiB,MAAM,CAAC;MACxBL,GAAG,CAAC;QACAM,KAAK,EAAGlB,IAAI,CAACiB,MAAM;QACnBb,IAAI,EAAGA;MACX,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ,CAAC;AAID,eAAeG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}